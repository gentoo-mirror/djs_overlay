From e4db17a895018fa905a2209b22d8e46048c5fba7 Mon Sep 17 00:00:00 2001
From: nnyyxxxx <nnyyxxxx@protonmail.com>
Date: Sun, 13 Apr 2025 19:43:07 -0400
Subject: [PATCH] helpers: properly support next/prev for workspace switching

---
 src/helpers/MiscFunctions.cpp | 26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/helpers/MiscFunctions.cpp b/src/helpers/MiscFunctions.cpp
index 9e398fd99c5..27bd21856ec 100644
--- a/src/helpers/MiscFunctions.cpp
+++ b/src/helpers/MiscFunctions.cpp
@@ -170,12 +170,34 @@ SWorkspaceIDName getWorkspaceIDNameFromString(const std::string& in) {
         if (!valid(PWORKSPACE))
             return {WORKSPACE_INVALID};
 
-        const auto PLASTWORKSPACE = g_pCompositor->getWorkspaceByID(PWORKSPACE->getPrevWorkspaceIDName().id);
+        const auto PREVID = PWORKSPACE->getPrevWorkspaceIDName().id;
 
-        if (!PLASTWORKSPACE)
+        if (PREVID == -1)
             return {WORKSPACE_INVALID};
 
+        const auto PLASTWORKSPACE = g_pCompositor->getWorkspaceByID(PREVID);
+
+        if (!PLASTWORKSPACE) {
+            Debug::log(LOG, "previous workspace {} doesn't exist yet", PREVID);
+            return {PREVID, ""};
+        }
+
         return {PLASTWORKSPACE->m_iID, PLASTWORKSPACE->m_szName};
+    } else if (in == "next") {
+        if (!g_pCompositor->m_pLastMonitor || !g_pCompositor->m_pLastMonitor->activeWorkspace) {
+            Debug::log(ERR, "no active monitor or workspace for 'next'");
+            return {WORKSPACE_INVALID};
+        }
+
+        auto        PCURRENTWORKSPACE = g_pCompositor->m_pLastMonitor->activeWorkspace;
+        auto        PCURRMONITOR      = g_pCompositor->m_pLastMonitor;
+
+        WORKSPACEID nextId = PCURRENTWORKSPACE->m_iID;
+
+        nextId      = PCURRENTWORKSPACE->m_iID + 1;
+        result.id   = nextId;
+        result.name = std::to_string(nextId);
+        return result;
     } else {
         if (in[0] == 'r' && (in[1] == '-' || in[1] == '+' || in[1] == '~') && isNumber(in.substr(2))) {
             bool absolute = in[1] == '~';

From c2aed4a926d7002a0d26b92c9824469294731bb1 Mon Sep 17 00:00:00 2001
From: Lee Bousfield <ljbousfield@gmail.com>
Date: Sun, 30 Mar 2025 07:54:44 -0500
Subject: [PATCH 1/2] core: Accumulate render damage

---
 src/desktop/WLSurface.cpp         | 5 +++--
 src/desktop/WLSurface.hpp         | 2 +-
 src/protocols/core/Compositor.cpp | 3 +++
 src/protocols/core/Compositor.hpp | 1 +
 src/render/Renderer.cpp           | 2 +-
 5 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/src/desktop/WLSurface.cpp b/src/desktop/WLSurface.cpp
index 11da7b680f3..f627563befd 100644
--- a/src/desktop/WLSurface.cpp
+++ b/src/desktop/WLSurface.cpp
@@ -94,11 +94,12 @@ Vector2D CWLSurface::getViewporterCorrectedSize() const {
     return m_pResource->current.viewport.hasDestination ? m_pResource->current.viewport.destination : m_pResource->current.bufferSize;
 }
 
-CRegion CWLSurface::computeDamage() const {
+CRegion CWLSurface::computeRenderDamage() const {
     if (!m_pResource->current.texture)
         return {};
 
-    CRegion damage = m_pResource->current.accumulateBufferDamage();
+    CRegion damage = m_pResource->damageSinceLastRender;
+    m_pResource->damageSinceLastRender.clear();
     damage.transform(wlTransformToHyprutils(m_pResource->current.transform), m_pResource->current.bufferSize.x, m_pResource->current.bufferSize.y);
 
     const auto BUFSIZE    = m_pResource->current.bufferSize;
diff --git a/src/desktop/WLSurface.hpp b/src/desktop/WLSurface.hpp
index 5f8da7156a9..0529bfc8fe6 100644
--- a/src/desktop/WLSurface.hpp
+++ b/src/desktop/WLSurface.hpp
@@ -37,7 +37,7 @@ class CWLSurface {
     Vector2D               correctSmallVec() const;    // returns a corrective vector for small() surfaces
     Vector2D               correctSmallVecBuf() const; // returns a corrective vector for small() surfaces, in BL coords
     Vector2D               getViewporterCorrectedSize() const;
-    CRegion                computeDamage() const; // logical coordinates. May be wrong if the surface is unassigned
+    CRegion                computeRenderDamage() const; // logical coordinates. May be wrong if the surface is unassigned
     bool                   visible();
     bool                   keyboardFocusable() const;
 
diff --git a/src/protocols/core/Compositor.cpp b/src/protocols/core/Compositor.cpp
index cb1aa69ab83..7035016c6ce 100644
--- a/src/protocols/core/Compositor.cpp
+++ b/src/protocols/core/Compositor.cpp
@@ -13,6 +13,7 @@
 #include "../../render/Renderer.hpp"
 #include "config/ConfigValue.hpp"
 #include "protocols/types/SurfaceRole.hpp"
+#include "protocols/types/SurfaceState.hpp"
 #include "render/Texture.hpp"
 #include <cstring>
 
@@ -427,6 +428,8 @@ CBox CWLSurfaceResource::extends() {
 void CWLSurfaceResource::commitPendingState(SSurfaceState& state) {
     auto lastTexture = current.texture;
     current.updateFrom(state);
+    if (state.updated & SSurfaceState::SURFACE_UPDATED_DAMAGE)
+        damageSinceLastRender = damageSinceLastRender.add(current.accumulateBufferDamage());
     state.updated = 0;
 
     if (current.buffer) {
diff --git a/src/protocols/core/Compositor.hpp b/src/protocols/core/Compositor.hpp
index c732f797718..af44a59408f 100644
--- a/src/protocols/core/Compositor.hpp
+++ b/src/protocols/core/Compositor.hpp
@@ -87,6 +87,7 @@ class CWLSurfaceResource {
     } events;
 
     SSurfaceState                          current, pending;
+    CRegion                                damageSinceLastRender;
 
     std::vector<SP<CWLCallbackResource>>   callbacks;
     WP<CWLSurfaceResource>                 self;
diff --git a/src/render/Renderer.cpp b/src/render/Renderer.cpp
index 8a8fd27a741..2ebe9e6e1d0 100644
--- a/src/render/Renderer.cpp
+++ b/src/render/Renderer.cpp
@@ -1818,7 +1818,7 @@ void CHyprRenderer::damageSurface(SP<CWLSurfaceResource> pSurface, double x, dou
         return;
 
     const auto WLSURF    = CWLSurface::fromResource(pSurface);
-    CRegion    damageBox = WLSURF ? WLSURF->computeDamage() : CRegion{};
+    CRegion    damageBox = WLSURF ? WLSURF->computeRenderDamage() : CRegion{};
     if (!WLSURF) {
         Debug::log(ERR, "BUG THIS: No CWLSurface for surface in damageSurface!!!");
         return;

From 37998265cbb445b83a13379e639128d34b69c13e Mon Sep 17 00:00:00 2001
From: Lee Bousfield <ljbousfield@gmail.com>
Date: Sun, 30 Mar 2025 17:29:33 -0500
Subject: [PATCH 2/2] desktop: Clarify computeRenderDamage mutates

---
 src/desktop/WLSurface.cpp | 2 +-
 src/desktop/WLSurface.hpp | 8 +++++---
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/desktop/WLSurface.cpp b/src/desktop/WLSurface.cpp
index f627563befd..caadde5332b 100644
--- a/src/desktop/WLSurface.cpp
+++ b/src/desktop/WLSurface.cpp
@@ -94,7 +94,7 @@ Vector2D CWLSurface::getViewporterCorrectedSize() const {
     return m_pResource->current.viewport.hasDestination ? m_pResource->current.viewport.destination : m_pResource->current.bufferSize;
 }
 
-CRegion CWLSurface::computeRenderDamage() const {
+CRegion CWLSurface::computeRenderDamage() {
     if (!m_pResource->current.texture)
         return {};
 
diff --git a/src/desktop/WLSurface.hpp b/src/desktop/WLSurface.hpp
index 0529bfc8fe6..3e7314c503a 100644
--- a/src/desktop/WLSurface.hpp
+++ b/src/desktop/WLSurface.hpp
@@ -37,9 +37,11 @@ class CWLSurface {
     Vector2D               correctSmallVec() const;    // returns a corrective vector for small() surfaces
     Vector2D               correctSmallVecBuf() const; // returns a corrective vector for small() surfaces, in BL coords
     Vector2D               getViewporterCorrectedSize() const;
-    CRegion                computeRenderDamage() const; // logical coordinates. May be wrong if the surface is unassigned
-    bool                   visible();
-    bool                   keyboardFocusable() const;
+    // Logical coordinates. May be wrong if the surface is unassigned.
+    // Returns damage since computeRenderDamage was last called.
+    CRegion computeRenderDamage();
+    bool    visible();
+    bool    keyboardFocusable() const;
 
     // getters for owners.
     PHLWINDOW    getWindow() const;

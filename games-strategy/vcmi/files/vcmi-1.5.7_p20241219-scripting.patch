diff --color -urN vcmi-1.5.7/scripting/erm/ERM.cbp vcmi/scripting/erm/ERM.cbp
--- vcmi-1.5.7/scripting/erm/ERM.cbp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/erm/ERM.cbp	1970-01-01 01:00:00.000000000 +0100
@@ -1,117 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
-<CodeBlocks_project_file>
-	<FileVersion major="1" minor="6" />
-	<Project>
-		<Option title="ERM" />
-		<Option pch_mode="2" />
-		<Option compiler="gcc" />
-		<Build>
-			<Target title="Debug-win32">
-				<Option platforms="Windows;" />
-				<Option output="../vcmiERM" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
-				<Option object_output="obj/Debug/x86/" />
-				<Option type="3" />
-				<Option compiler="gcc" />
-				<Compiler>
-					<Add option="-Og" />
-					<Add option="-g" />
-					<Add option="-ggdb" />
-				</Compiler>
-				<Linker>
-					<Add option="-lboost_program_options$(#boost.libsuffix32)" />
-					<Add option="-lboost_filesystem$(#boost.libsuffix32)" />
-					<Add option="-lboost_system$(#boost.libsuffix32)" />
-					<Add option="-lboost_thread$(#boost.libsuffix32)" />
-					<Add option="-lboost_chrono$(#boost.libsuffix32)" />
-					<Add option="-lVCMI_lib" />
-					<Add directory="$(#boost.lib32)" />
-				</Linker>
-			</Target>
-			<Target title="Release-win32">
-				<Option platforms="Windows;" />
-				<Option output="../vcmiERM" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
-				<Option object_output="obj/Release/x86/" />
-				<Option type="3" />
-				<Option compiler="gcc" />
-				<Compiler>
-					<Add option="-fomit-frame-pointer" />
-					<Add option="-O2" />
-				</Compiler>
-				<Linker>
-					<Add option="-s" />
-					<Add option="-lboost_program_options$(#boost.libsuffix32)" />
-					<Add option="-lboost_filesystem$(#boost.libsuffix32)" />
-					<Add option="-lboost_system$(#boost.libsuffix32)" />
-					<Add option="-lboost_thread$(#boost.libsuffix32)" />
-					<Add option="-lboost_chrono$(#boost.libsuffix32)" />
-					<Add option="-lVCMI_lib" />
-					<Add directory="$(#boost.lib32)" />
-				</Linker>
-			</Target>
-			<Target title="Debug-win64">
-				<Option platforms="Windows;" />
-				<Option output="../vcmiERM" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
-				<Option object_output="obj/Debug/x64/" />
-				<Option type="3" />
-				<Option compiler="gnu_gcc_compiler_x64" />
-				<Compiler>
-					<Add option="-Og" />
-					<Add option="-g" />
-					<Add option="-ggdb" />
-				</Compiler>
-				<Linker>
-					<Add option="-lboost_program_options$(#boost.libsuffix64)" />
-					<Add option="-lboost_filesystem$(#boost.libsuffix64)" />
-					<Add option="-lboost_system$(#boost.libsuffix64)" />
-					<Add option="-lboost_thread$(#boost.libsuffix64)" />
-					<Add option="-lboost_chrono$(#boost.libsuffix64)" />
-					<Add option="-lVCMI_lib" />
-					<Add directory="$(#boost.lib64)" />
-				</Linker>
-			</Target>
-		</Build>
-		<Compiler>
-			<Add option="-Wextra" />
-			<Add option="-Wall" />
-			<Add option="-std=gnu++11" />
-			<Add option="-fexceptions" />
-			<Add option="-Wpointer-arith" />
-			<Add option="-Wno-switch" />
-			<Add option="-Wno-sign-compare" />
-			<Add option="-Wno-unused-parameter" />
-			<Add option="-Wno-overloaded-virtual" />
-			<Add option="-DBOOST_ALL_DYN_LINK" />
-			<Add option="-DBOOST_SYSTEM_NO_DEPRECATED" />
-			<Add option="-D_WIN32_WINNT=0x0600" />
-			<Add option="-D_WIN32" />
-			<Add directory="$(#boost.include)" />
-			<Add directory="../../include" />
-		</Compiler>
-		<Linker>
-			<Add directory="../.." />
-		</Linker>
-		<Unit filename="CMakeLists.txt" />
-		<Unit filename="ERMInterpreter.cpp" />
-		<Unit filename="ERMInterpreter.h" />
-		<Unit filename="ERMParser.cpp" />
-		<Unit filename="ERMParser.h" />
-		<Unit filename="ERMScriptModule.cpp" />
-		<Unit filename="ERMScriptModule.h" />
-		<Unit filename="StdInc.h">
-			<Option compile="1" />
-			<Option weight="0" />
-		</Unit>
-		<Extensions>
-			<DoxyBlocks>
-				<comment_style block="0" line="0" />
-				<doxyfile_project />
-				<doxyfile_build />
-				<doxyfile_warnings />
-				<doxyfile_output />
-				<doxyfile_dot />
-				<general />
-			</DoxyBlocks>
-			<lib_finder disable_auto="1" />
-		</Extensions>
-	</Project>
-</CodeBlocks_project_file>
diff --color -urN vcmi-1.5.7/scripting/erm/ERMInterpreter.cpp vcmi/scripting/erm/ERMInterpreter.cpp
--- vcmi-1.5.7/scripting/erm/ERMInterpreter.cpp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/erm/ERMInterpreter.cpp	2024-12-19 15:00:22.983151450 +0100
@@ -1452,37 +1452,37 @@
 	return false;
 }
 
-ERM::EVOtions ERMInterpreter::getExpType(const ERM::TVOption & opt)
+ERM::EVOptions ERMInterpreter::getExpType(const ERM::TVOption & opt)
 {
 	struct Visitor
 	{
-		ERM::EVOtions operator()(const boost::recursive_wrapper<ERM::TVExp>&) const
+		ERM::EVOptions operator()(const boost::recursive_wrapper<ERM::TVExp>&) const
 		{
-			return ERM::EVOtions::VEXP;
+			return ERM::EVOptions::VEXP;
 		}
-		ERM::EVOtions operator()(const ERM::TSymbol&) const
+		ERM::EVOptions operator()(const ERM::TSymbol&) const
 		{
-			return ERM::EVOtions::SYMBOL;
+			return ERM::EVOptions::SYMBOL;
 		}
-		ERM::EVOtions operator()(char) const
+		ERM::EVOptions operator()(char) const
 		{
-			return ERM::EVOtions::CHAR;
+			return ERM::EVOptions::CHAR;
 		}
-		ERM::EVOtions operator()(double) const
+		ERM::EVOptions operator()(double) const
 		{
-			return ERM::EVOtions::DOUBLE;
+			return ERM::EVOptions::DOUBLE;
 		}
-		ERM::EVOtions operator()(int) const
+		ERM::EVOptions operator()(int) const
 		{
-			return ERM::EVOtions::INT;
+			return ERM::EVOptions::INT;
 		}
-		ERM::EVOtions operator()(const ERM::Tcommand&) const
+		ERM::EVOptions operator()(const ERM::Tcommand&) const
 		{
-			return ERM::EVOtions::TCMD;
+			return ERM::EVOptions::TCMD;
 		}
-		ERM::EVOtions operator()(const ERM::TStringConstant&) const
+		ERM::EVOptions operator()(const ERM::TStringConstant&) const
 		{
-			return ERM::EVOtions::STRINGC;
+			return ERM::EVOptions::STRINGC;
 		}
 	};
 	const Visitor v;
diff --color -urN vcmi-1.5.7/scripting/erm/ERMInterpreter.h vcmi/scripting/erm/ERMInterpreter.h
--- vcmi-1.5.7/scripting/erm/ERMInterpreter.h	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/erm/ERMInterpreter.h	2024-12-19 15:00:22.983151450 +0100
@@ -305,7 +305,7 @@
 
 	static bool isCMDATrigger(const ERM::Tcommand & cmd);
 	static bool isATrigger(const ERM::TLine & line);
-	static ERM::EVOtions getExpType(const ERM::TVOption & opt);
+	static ERM::EVOptions getExpType(const ERM::TVOption & opt);
 	ERM::TLine & retrieveLine(const VERMInterpreter::LinePointer & linePtr);
 	static ERM::TTriggerBase & retrieveTrigger(ERM::TLine & line);
 public:
diff --color -urN vcmi-1.5.7/scripting/erm/ERMParser.h vcmi/scripting/erm/ERMParser.h
--- vcmi-1.5.7/scripting/erm/ERMParser.h	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/erm/ERMParser.h	2024-12-19 15:00:22.983151450 +0100
@@ -241,7 +241,7 @@
 
 	//for #'symbol expression
 
-	enum EVOtions{VEXP, SYMBOL, CHAR, DOUBLE, INT, TCMD, STRINGC};
+	enum EVOptions{VEXP, SYMBOL, CHAR, DOUBLE, INT, TCMD, STRINGC};
 	struct TVExp;
 	typedef std::variant<boost::recursive_wrapper<TVExp>, TSymbol, char, double, int, Tcommand, TStringConstant > TVOption; //options in v-expression
 	//v-expression
diff --color -urN vcmi-1.5.7/scripting/erm/ERM.vcxproj vcmi/scripting/erm/ERM.vcxproj
--- vcmi-1.5.7/scripting/erm/ERM.vcxproj	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/erm/ERM.vcxproj	1970-01-01 01:00:00.000000000 +0100
@@ -1,148 +0,0 @@
-ï»¿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="RD|Win32">
-      <Configuration>RD</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="RD|x64">
-      <Configuration>RD</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{8F202F43-106D-4F63-AD9D-B1D43E803E8C}</ProjectGuid>
-    <RootNamespace>ERM</RootNamespace>
-    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v142</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v142</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RD|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v142</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RD|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v142</PlatformToolset>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="..\..\VCMI_global_debug.props" />
-    <Import Project="..\..\VCMI_global.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="..\..\VCMI_global_debug.props" />
-    <Import Project="..\..\VCMI_global.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='RD|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="..\..\VCMI_global_release.props" />
-    <Import Project="..\..\VCMI_global.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='RD|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="..\..\VCMI_global_release.props" />
-    <Import Project="..\..\VCMI_global.props" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <OutDir>..\..\..</OutDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <OutDir>$(VCMI_Out)\Scripting\</OutDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RD|Win32'">
-    <OutDir>..\..\..\Scripting</OutDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RD|x64'">
-    <OutDir>$(VCMI_Out)\Scripting\</OutDir>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <PrecompiledHeaderFile>StdInc.h</PrecompiledHeaderFile>
-      <AdditionalOptions>/Zm218 %(AdditionalOptions)</AdditionalOptions>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>VCMI_lib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalLibraryDirectories>..\..\..\libs;..\..</AdditionalLibraryDirectories>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RD|Win32'">
-    <ClCompile>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <AdditionalOptions>/Zm218 %(AdditionalOptions)</AdditionalOptions>
-      <PrecompiledHeaderFile>StdInc.h</PrecompiledHeaderFile>
-      <MultiProcessorCompilation>true</MultiProcessorCompilation>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>VCMI_lib.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalLibraryDirectories>..\..\..\libs;..\..</AdditionalLibraryDirectories>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <AdditionalOptions>/Zm218 %(AdditionalOptions)</AdditionalOptions>
-      <PrecompiledHeaderFile>StdInc.h</PrecompiledHeaderFile>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RD|x64'">
-    <ClCompile>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <AdditionalOptions>/Zm218 %(AdditionalOptions)</AdditionalOptions>
-      <PrecompiledHeaderFile>StdInc.h</PrecompiledHeaderFile>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClInclude Include="..\..\Global.h" />
-    <ClInclude Include="ERMInterpreter.h" />
-    <ClInclude Include="ERMParser.h" />
-    <ClInclude Include="ERMScriptModule.h" />
-    <ClInclude Include="StdInc.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="ERMInterpreter.cpp" />
-    <ClCompile Include="ERMParser.cpp" />
-    <ClCompile Include="ERMScriptModule.cpp" />
-    <ClCompile Include="StdInc.cpp">
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">StdInc.h</PrecompiledHeaderFile>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RD|Win32'">Create</PrecompiledHeader>
-      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RD|x64'">Create</PrecompiledHeader>
-    </ClCompile>
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-</Project>
\ No newline at end of file
diff --color -urN vcmi-1.5.7/scripting/lua/api/Creature.cpp vcmi/scripting/lua/api/Creature.cpp
--- vcmi-1.5.7/scripting/lua/api/Creature.cpp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/lua/api/Creature.cpp	2024-12-19 15:00:22.985151533 +0100
@@ -46,7 +46,7 @@
 	{"getLevel", LuaMethodWrapper<Creature, decltype(&Creature::getLevel), &Creature::getLevel>::invoke, false},
 	{"getGrowth", LuaMethodWrapper<Creature, decltype(&Creature::getGrowth), &Creature::getGrowth>::invoke, false},
 	{"getHorde", LuaMethodWrapper<Creature, decltype(&Creature::getHorde), &Creature::getHorde>::invoke, false},
-	{"getFaction", LuaMethodWrapper<Creature, decltype(&Creature::getFaction), &Creature::getFaction>::invoke, false},
+	{"getFactionID", LuaMethodWrapper<Creature, decltype(&Creature::getFactionID), &Creature::getFactionID>::invoke, false},
 
 	{"getBaseAttack", LuaMethodWrapper<Creature, decltype(&Creature::getBaseAttack), &Creature::getBaseAttack>::invoke, false},
 	{"getBaseDefense", LuaMethodWrapper<Creature, decltype(&Creature::getBaseDefense), &Creature::getBaseDefense>::invoke, false},
diff --color -urN vcmi-1.5.7/scripting/lua/api/events/BattleEvents.cpp vcmi/scripting/lua/api/events/BattleEvents.cpp
--- vcmi-1.5.7/scripting/lua/api/events/BattleEvents.cpp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/lua/api/events/BattleEvents.cpp	2024-12-19 15:00:22.986151574 +0100
@@ -42,8 +42,8 @@
 		true
 	},
 	{
-		"getInitalDamage",
-		LuaMethodWrapper<ApplyDamage, decltype(&ApplyDamage::getInitalDamage), &ApplyDamage::getInitalDamage>::invoke,
+		"getInitialDamage",
+		LuaMethodWrapper<ApplyDamage, decltype(&ApplyDamage::getInitialDamage), &ApplyDamage::getInitialDamage>::invoke,
 		false
 	},
 	{
diff --color -urN vcmi-1.5.7/scripting/lua/api/ServerCb.cpp vcmi/scripting/lua/api/ServerCb.cpp
--- vcmi-1.5.7/scripting/lua/api/ServerCb.cpp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/lua/api/ServerCb.cpp	2024-12-19 15:00:22.986151574 +0100
@@ -74,7 +74,7 @@
 
 	auto * pack = static_cast<CPackForClient *>(lua_touserdata(L, 1));
 
-	object->apply(pack);
+	object->apply(*pack);
 
 	return S.retVoid();
 }
@@ -96,7 +96,7 @@
 	if(!S.tryGet(1, pack))
 		return S.retVoid();
 
-	object->apply(pack.get());
+	object->apply(*pack);
 
 	return S.retVoid();
 }
diff --color -urN vcmi-1.5.7/scripting/lua/Lua.cbp vcmi/scripting/lua/Lua.cbp
--- vcmi-1.5.7/scripting/lua/Lua.cbp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/lua/Lua.cbp	1970-01-01 01:00:00.000000000 +0100
@@ -1,171 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
-<CodeBlocks_project_file>
-	<FileVersion major="1" minor="6" />
-	<Project>
-		<Option title="Lua" />
-		<Option compiler="gcc" />
-		<Build>
-			<Target title="Debug-win32">
-				<Option output="../vcmiLua" prefix_auto="1" extension_auto="1" />
-				<Option object_output="obj/Debug/x32/" />
-				<Option type="3" />
-				<Option compiler="gcc" />
-				<Compiler>
-					<Add option="-Og" />
-					<Add option="-Wall" />
-					<Add option="-g" />
-					<Add option="-DBUILD_DLL" />
-				</Compiler>
-				<Linker>
-					<Add option="-lboost_program_options$(#boost.libsuffix32)" />
-					<Add option="-lboost_filesystem$(#boost.libsuffix32)" />
-					<Add option="-lboost_system$(#boost.libsuffix32)" />
-					<Add option="-lboost_thread$(#boost.libsuffix32)" />
-					<Add option="-lboost_chrono$(#boost.libsuffix32)" />
-					<Add option="-lVCMI_lib" />
-					<Add directory="$(#boost.lib32)" />
-				</Linker>
-			</Target>
-			<Target title="Release-win32">
-				<Option output="../vcmiLua" prefix_auto="1" extension_auto="1" />
-				<Option object_output="obj/Release/x32/" />
-				<Option type="3" />
-				<Option compiler="gcc" />
-				<Compiler>
-					<Add option="-O2" />
-					<Add option="-Wall" />
-					<Add option="-DBUILD_DLL" />
-				</Compiler>
-				<Linker>
-					<Add option="-s" />
-					<Add option="-lboost_program_options$(#boost.libsuffix32)" />
-					<Add option="-lboost_filesystem$(#boost.libsuffix32)" />
-					<Add option="-lboost_system$(#boost.libsuffix32)" />
-					<Add option="-lboost_thread$(#boost.libsuffix32)" />
-					<Add option="-lboost_chrono$(#boost.libsuffix32)" />
-					<Add option="-lVCMI_lib" />
-					<Add directory="$(#boost.lib32)" />
-				</Linker>
-			</Target>
-			<Target title="Debug-win64">
-				<Option output="../vcmiLua" prefix_auto="1" extension_auto="1" />
-				<Option object_output="obj/Debug/x64/" />
-				<Option type="3" />
-				<Option compiler="gnu_gcc_compiler_x64" />
-				<Compiler>
-					<Add option="-Og" />
-					<Add option="-g" />
-					<Add option="-DBUILD_DLL" />
-				</Compiler>
-				<Linker>
-					<Add option="-lboost_program_options$(#boost.libsuffix64)" />
-					<Add option="-lboost_filesystem$(#boost.libsuffix64)" />
-					<Add option="-lboost_system$(#boost.libsuffix64)" />
-					<Add option="-lboost_thread$(#boost.libsuffix64)" />
-					<Add option="-lboost_chrono$(#boost.libsuffix64)" />
-					<Add option="-lVCMI_lib" />
-					<Add directory="$(#boost.lib64)" />
-				</Linker>
-			</Target>
-		</Build>
-		<Compiler>
-			<Add option="-std=gnu++11" />
-			<Add option="-fexceptions" />
-			<Add option="-Wpointer-arith" />
-			<Add option="-Wno-switch" />
-			<Add option="-Wno-sign-compare" />
-			<Add option="-Wno-unused-parameter" />
-			<Add option="-Wno-overloaded-virtual" />
-			<Add option="-DBOOST_ALL_DYN_LINK" />
-			<Add option="-DBOOST_SYSTEM_NO_DEPRECATED" />
-			<Add option="-DBOOST_UUID_RANDOM_PROVIDER_FORCE_WINCRYPT" />
-			<Add option="-D_WIN32_WINNT=0x0600" />
-			<Add option="-D_WIN32" />
-			<Add directory="$(#boost.include)" />
-			<Add directory="$(#lua.include)" />
-			<Add directory="../../include" />
-		</Compiler>
-		<Linker>
-			<Add library="../../lua51.dll" />
-			<Add directory=".." />
-			<Add directory="../.." />
-		</Linker>
-		<Unit filename="CMakeLists.txt" />
-		<Unit filename="LuaCallWrapper.h" />
-		<Unit filename="LuaFunctor.h" />
-		<Unit filename="LuaReference.cpp" />
-		<Unit filename="LuaReference.h" />
-		<Unit filename="LuaScriptModule.cpp" />
-		<Unit filename="LuaScriptModule.h" />
-		<Unit filename="LuaScriptingContext.cpp" />
-		<Unit filename="LuaScriptingContext.h" />
-		<Unit filename="LuaSpellEffect.cpp" />
-		<Unit filename="LuaSpellEffect.h" />
-		<Unit filename="LuaStack.cpp" />
-		<Unit filename="LuaStack.h" />
-		<Unit filename="LuaWrapper.h" />
-		<Unit filename="StdInc.h">
-			<Option weight="0" />
-		</Unit>
-		<Unit filename="api/Artifact.cpp" />
-		<Unit filename="api/Artifact.h" />
-		<Unit filename="api/BattleCb.cpp" />
-		<Unit filename="api/BattleCb.h" />
-		<Unit filename="api/BonusSystem.cpp" />
-		<Unit filename="api/BonusSystem.h" />
-		<Unit filename="api/Creature.cpp" />
-		<Unit filename="api/Creature.h" />
-		<Unit filename="api/Faction.cpp" />
-		<Unit filename="api/Faction.h" />
-		<Unit filename="api/GameCb.cpp" />
-		<Unit filename="api/GameCb.h" />
-		<Unit filename="api/HeroClass.cpp" />
-		<Unit filename="api/HeroClass.h" />
-		<Unit filename="api/HeroInstance.cpp" />
-		<Unit filename="api/HeroInstance.h" />
-		<Unit filename="api/HeroType.cpp" />
-		<Unit filename="api/HeroType.h" />
-		<Unit filename="api/ObjectInstance.cpp" />
-		<Unit filename="api/ObjectInstance.h" />
-		<Unit filename="api/Player.cpp" />
-		<Unit filename="api/Player.h" />
-		<Unit filename="api/Registry.cpp" />
-		<Unit filename="api/Registry.h" />
-		<Unit filename="api/ServerCb.cpp" />
-		<Unit filename="api/ServerCb.h" />
-		<Unit filename="api/Services.cpp" />
-		<Unit filename="api/Services.h" />
-		<Unit filename="api/Skill.cpp" />
-		<Unit filename="api/Skill.h" />
-		<Unit filename="api/Spell.cpp" />
-		<Unit filename="api/Spell.h" />
-		<Unit filename="api/StackInstance.cpp" />
-		<Unit filename="api/StackInstance.h" />
-		<Unit filename="api/battle/UnitProxy.cpp" />
-		<Unit filename="api/battle/UnitProxy.h" />
-		<Unit filename="api/events/AdventureEvents.cpp" />
-		<Unit filename="api/events/AdventureEvents.h" />
-		<Unit filename="api/events/BattleEvents.cpp" />
-		<Unit filename="api/events/BattleEvents.h" />
-		<Unit filename="api/events/EventBusProxy.cpp" />
-		<Unit filename="api/events/EventBusProxy.h" />
-		<Unit filename="api/events/GenericEvents.cpp" />
-		<Unit filename="api/events/GenericEvents.h" />
-		<Unit filename="api/events/SubscriptionRegistryProxy.cpp" />
-		<Unit filename="api/events/SubscriptionRegistryProxy.h" />
-		<Unit filename="api/netpacks/BattleLogMessage.cpp" />
-		<Unit filename="api/netpacks/BattleLogMessage.h" />
-		<Unit filename="api/netpacks/BattleStackMoved.cpp" />
-		<Unit filename="api/netpacks/BattleStackMoved.h" />
-		<Unit filename="api/netpacks/BattleUnitsChanged.cpp" />
-		<Unit filename="api/netpacks/BattleUnitsChanged.h" />
-		<Unit filename="api/netpacks/EntitiesChanged.cpp" />
-		<Unit filename="api/netpacks/EntitiesChanged.h" />
-		<Unit filename="api/netpacks/InfoWindow.cpp" />
-		<Unit filename="api/netpacks/InfoWindow.h" />
-		<Unit filename="api/netpacks/PackForClient.h" />
-		<Unit filename="api/netpacks/SetResources.cpp" />
-		<Unit filename="api/netpacks/SetResources.h" />
-		<Extensions />
-	</Project>
-</CodeBlocks_project_file>
diff --color -urN vcmi-1.5.7/scripting/lua/LuaScriptingContext.cpp vcmi/scripting/lua/LuaScriptingContext.cpp
--- vcmi-1.5.7/scripting/lua/LuaScriptingContext.cpp	2024-08-25 23:27:47.000000000 +0200
+++ vcmi/scripting/lua/LuaScriptingContext.cpp	2024-12-19 15:00:22.984151491 +0100
@@ -14,6 +14,7 @@
 #include <vstd/StringUtils.h>
 #include <vcmi/events/EventBus.h>
 #include <vcmi/ServerCallback.h>
+#include "vcmi/Services.h"
 
 #include "LuaStack.h"
 
